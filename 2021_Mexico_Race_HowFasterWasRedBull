from path.source import track_telemetry as tt
from matplotlib import pyplot as plt
import joypy
import pandas as pd
from fastf1 import plotting
import numpy as np

def find_nearest(array, values):
    ### Description:
    ### input:
    ### output:
    indices = np.abs(np.subtract.outer(array, values[0])).argmin(0)
    return indices

def statistics(ax, values, color, alpha):
    ### Description:
    ### input:
    ### output:
    for i in range(len(values)):
        y_min = 0
        y_max_med = ax[i].lines[1].get_ydata()
        x_data = ax[i].lines[1].get_xdata()
        ind = find_nearest(x_data, values[i])
        y_max = y_max_med[ind]
        ax[i].set_axisbelow(False)
        ax[i].plot([values[i][0], values[i][0]], [y_min, y_max], c = color, alpha = alpha, zorder=200)
"""
Mexico GP 2021
Red Bull seemes to have an edge over Mercedes in the race, Hamilton refered to them during the race multiple time that
'Guys, they are too fast for us'
But how much quicker was Red Bull?
"""

laps, event = tt.crate_event(2021, 'USA', 'R') #No mistake as of now 13.11.2021 'USA' returns Mexico City GP - issue#23

"""Driver list should contain only finishers to ensure minimal number of valid laps """
# drivers_list = ['VER', 'HAM', 'PER', 'GAS', 'LEC', 'SAI', 'VET', 'ALO', 'NOR', 'GIO', 'RIC']
drivers_list = ['VER', 'HAM', 'PER','BOT']
best_lap_number = 15
driver_list = tt.data_list(drivers_list, laps, 'all')

c = []
median = []
mean = []
q25 = []
q75 = []
for i in range(len(driver_list)):
    if i == 0:
        df = driver_list[i].pick_accurate().sort_values(by = 'LapTime').reset_index(drop=True)
        df = df[['LapTime']]
        df = pd.DataFrame(data = df.rename(columns = {'LapTime':driver_list[i].Driver.iloc[0]})[driver_list[i].Driver.iloc[0]].dt.total_seconds())
        df_temp = df
    if i != 0:
        df_temp = driver_list[i].pick_accurate().sort_values(by = 'LapTime').reset_index(drop=True)
        df_temp = df_temp[['LapTime']]
        df_temp = pd.DataFrame(data = df_temp.rename(columns = {'LapTime':driver_list[i].Driver.iloc[0]})[driver_list[i].Driver.iloc[0]].dt.total_seconds())

        df = df.join(df_temp)

    c.append(plotting.team_color(driver_list[i]['Team'].iloc[0]))
    median.append(df_temp.median(axis = 0))
    mean.append(df_temp.mean(axis = 0))
    q25.append(df_temp.quantile(q=0.25, axis = 0, numeric_only = True))
    q75.append(df_temp.quantile(q=0.75, axis = 0, numeric_only = True))

fig, ax = joypy.joyplot(df, overlap=0.9, color = c, linecolor='w', linewidth=.5, alpha = 1, title = "Race Pace Mexico 2021", figsize = (11.5, 7))
xliml = 78
xlimr = 86
statistics(ax, median, 'r', 1)
statistics(ax, mean, 'k', 0.6)
statistics(ax, q25, 'k', 0.3)
statistics(ax, q75, 'k', 0.3)
for i in range(len(ax)):
    ax[i].set_xlim(left = xliml, right = xlimr)

print("Median: ")
print(median)
print("Average: ")
print(mean)
print("Quantile 25: ")
print(q25)
print("Quantile 75: ")
print(q75)
plt.show()
